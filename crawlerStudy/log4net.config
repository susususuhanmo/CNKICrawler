<?xml version="1.0"?>
<configuration>
  <log4net>
    <logger name="message">
      <level value="ALL"/>
      <appender-ref ref="RollingLogFileAppender" />
    </logger>

    <!--文本文件-->
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender" >
      <param name="encoding">utf-8</param>
      <!-- 输出位置 -->
      <file type="log4net.Util.PatternString" value="Log\Message" />
      <param name="AppendToFile" value="true" />
      <!--输出超过2MB 重新生成-->
      <param name="MaximumFileSize" value="2MB" />
      <!--每日一LOG-->
      <rollingStyle value="Composite" />
      <staticLogFileName value="false" />
      <datePattern value="_yyyyMMdd'.log'" />
      <!--置为true,当前最新日志文件名永远为file节中的名字-->
      <param name="StaticLogFileName" value="false" />
      <param name="MaxSizeRollBackups" value="100" />
      <!-- 输出模板-->
      <!--%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
      %n(new line):换行
      %d(datetime):输出当前语句运行的时刻
      %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
      %t(thread id):当前语句所在的线程ID
      %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
      %c(class):当前日志对象的名称
      %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="Footer" value="-------------------------------------------------------&#13;&#10;"/>
        <param name="ConversionPattern" value="%d [%t] %-5p - %m%n"/>
      </layout>
      <!--输出LOG的过滤器 ALL<DEBUG<INFO<WARN<ERROR<FATAL<OFF-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="DEBUG" />
        <param name="LevelMax" value="ERROR" />
      </filter>
    </appender>
  </log4net>
</configuration>
